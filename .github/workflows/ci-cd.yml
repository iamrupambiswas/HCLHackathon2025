name: CI/CD Pipeline for HCLHackathon2025

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  backend-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: 3.12

    - name: Install backend dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install ruff  # For linting

    - name: Lint backend with ruff
      run: |
        ruff check .

    - name: Run backend tests
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/test_db
        JWT_SECRET: test-secret
        JWT_ALGORITHM: HS256
        ACCESS_TOKEN_EXPIRE_MINUTES: 60
      run: |
        pytest tests/ -v  # Adjust path if tests are elsewhere

    - name: Run Alembic migrations (check)
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/test_db
      run: |
        alembic upgrade head

  frontend-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18 

    - name: Install frontend dependencies
      run: |
        npm install

    - name: Lint frontend
      run: |
        npm run lint

    - name: Run frontend tests
      run: |
        npm run test  # Adjust based on your test script (e.g., jest, vitest)

  deploy-backend:
    needs: backend-test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Trigger Render deployment
      run: |
        curl -X POST \
          -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
          -H "Content-Type: application/json" \
          -d '{"clearCache": true}' \
          https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys

  deploy-frontend:
    needs: frontend-test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
    - uses: actions/checkout@v4

    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./frontend
        vercel-args: --prod 